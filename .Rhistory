data(mtcars)
View(mtcars)
View(mtcars)
str(mtcars)
?mtcars
plot(qsec ~ hp, data = mtcars)
mod_t <- lm(hp ~ vs, data = mtcars)
summary(mot_t)
summary(mod_t)
t.test(hp ~ vs, data = mtcars)
library(effects)
effect(mod_t)
effect("vs", mod_t)
mtcars <- tranform(mtcars,
vs = factor(vs, labels = c("v-shaped", "straight")),
am = factor(am, labels = c("automatic", "manual")))
mtcars <- transform(mtcars,
vs = factor(vs, labels = c("v-shaped", "straight")),
am = factor(am, labels = c("automatic", "manual")))
plot(qsec ~ hp, data = mtcars)
mod_t <- lm(hp ~ vs, data = mtcars)
summary(mod_t)
t.test(hp ~ vs, data = mtcars)
effect("vs", mod_t)
diff(effect("vs", mod_t))
ef <- effects("vs", mod_t)
ef <- effect("vs", mod_t)
str(ef)
ef
ef$term
ef$fit
diff(effect("vs", mod_t)$fit)
predict(mod_t)
table(predict(mod_t))
emmeans::emmeans(mod_t, ~ vs)
emmeans::emmeans(mod_t, pairwise ~ vs)
sample_standard_deviation <- 4.5
sample_size <- 20
n <- 20
n <- 20
s <- 4.3
sem <- s/sqrt(n)
replicate(100, 10)
replicate(100, s)
set.seed(1234)
population <- rnorm(n = N, mean = mu, sd = sigma)
# Parameters
mu <- 64    # Population mean
sigma <- 4  # Population standard deviation
N <- 1e6    # Population size
# Statistics
n <- 20     # sample size
s <- 4.3    # sample standard deviation
# Parameters
mu <- 64    # Population mean
sigma <- 4  # Population standard deviation
N <- 1e6    # Population size
# Statistics
n <- 20     # sample size
s <- 4.3    # sample standard deviation
length(N)
N
set.seed(1234)
population <- rnorm(n = N, mean = mu, sd = sigma)
hist(population)
hist(population, breaks = "fd")
?sample
set.seed(5678)
sample1 <- sample(x = population, size = n, replace = FALSE)
hist(sample1)
sample1 <- sample(x = population, size = 400, replace = FALSE)
hist(sample1)
sample1 <- sample(x = population, size = n, replace = FALSE)
hist(sample1)
set.seed(5678)
sample1 <- sample(x = population, size = n, replace = FALSE)
hist(sample1)
sample(x = population, size = n, replace = FALSE)
mean(sample(x = population, size = n, replace = FALSE))
sample1 <- sample(x = population, size = n, replace = FALSE)
mean(sample(x = population, size = n, replace = FALSE))
sample1 <- sample(x = population, size = n, replace = FALSE)
mean(sample(x = population, size = n, replace = FALSE))
sample1 <- sample(x = population, size = n, replace = FALSE)
mean(sample(x = population, size = n, replace = FALSE))
set.seed(5678)
sample1 <- sample(x = population, size = n, replace = FALSE)
mean(sample(x = population, size = n, replace = FALSE))
mean(sample(x = population, size = n, replace = FALSE))
mean(sample(x = population, size = n, replace = FALSE))
mean(sample(x = population, size = n, replace = FALSE))
mean(sample1)
set.seed(5678)
mean(sample(x = population, size = n, replace = FALSE))
mean(sample1)
replicate(5, 1 + 1)
nreps <- 1000
replicate(n = nreps, mean(sample(x = population, size = n, replace = FALSE)))
sample_means <- replicate(n = nreps, mean(sample(x = population, size = n, replace = FALSE)))
hist(sample_means, breaks = "fd")
par(mfrow = c(2,1))
range(population)
hist(population, breaks = "fd", xlim = c(44, 84))
hist(sample_means, breaks = "fd", xlim = c(44, 84))
# Parameters
mu <- 64    # Population mean
sigma <- 4  # Population standard deviation
N <- 1e6    # Population size
# Statistics
n <- 200     # sample size
s <- 4.3    # sample standard deviation
nreps <- 1000
# Create population of women's heights
set.seed(1234)
population <- rnorm(n = N, mean = mu, sd = sigma)
# Histogram of heights (breaks = "fd" get lots of bars)
hist(population, breaks = "fd")
# Sample from population
set.seed(5678)
sample1 <- sample(x = population, size = n, replace = FALSE)
mean(sample1)
# Sample from population 1,000 times and store the mean of each sample
sample_means <- replicate(n = nreps, mean(sample(x = population, size = n, replace = FALSE)))
hist(sample1)
sem <- s/sqrt(n)
hist(sample_means, breaks = "fd")
par(mfrow = c(2,1))
hist(population, breaks = "fd", xlim = c(44, 84))
hist(sample_means, breaks = "fd", xlim = c(44, 84))
sem_empirical <- sd(sample_means)
sem_formula <- sigma/sqrt(n)
# Parameters
mu <- 64    # Population mean
sigma <- 4  # Population standard deviation
N <- 1e6    # Population size
# Statistics
n <- 2     # sample size
s <- 4.3    # sample standard deviation
nreps <- 1000
# Create population of women's heights
set.seed(1234)
population <- rnorm(n = N, mean = mu, sd = sigma)
# Histogram of heights (breaks = "fd" get lots of bars)
hist(population, breaks = "fd")
# Sample from population
set.seed(5678)
sample1 <- sample(x = population, size = n, replace = FALSE)
mean(sample1)
# Sample from population 1,000 times and store the mean of each sample
sample_means <- replicate(n = nreps, mean(sample(x = population, size = n, replace = FALSE)))
hist(sample1)
sem <- s/sqrt(n)
hist(sample_means, breaks = "fd")
par(mfrow = c(2,1))
hist(population, breaks = "fd", xlim = c(44, 84))
hist(sample_means, breaks = "fd", xlim = c(44, 84))
sem_empirical <- sd(sample_means)
sem_formula <- sigma/sqrt(n)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
data(mtcars)
mtcars <- transform(mtcars,
am = factor(am, labels = c("automatic", "manual")),
vs = factor(vs, labels = c("v-shaped", "straigth")))
write.table(x = mtcars, file = "data/mtcars.txt", row.names = FALSE)
write.csv(x = mtcars, file = "data/mtcars.csv", row.names = FALSE)
mtcars <- read.csv("data/mtcars.csv", header = TRUE)
mtcars <- read.csv("data/mtcars.csv", header = TRUE)
View(mtcars)
10
10 + 1
"10" + 1
ten
"ten"
TRUE
TRue
TRUE
TRUE
1+ 2
3*4
12/3
6^2
10 < 11
10 < 9
10 == 9 + 1
mode(10)
mode("10")
mode(TRUE)
length(10)
1
1:10
length(1:10)
sum(1:10)
sum(1:10)/length(1:10)
mean(1:10)
sd(1:10)
var(1:10)
hank_shoe_size <- 8.5
hank_IQ = 250
x <- c(2, 3, 2, 2, 5, 4)
mean(x) -> xbar
xbar <- mean(x)
pet <- "Clay"
xbar + 3
objects()
source('~/Documents/RuserGroup/code/demoplot.R', echo=TRUE)
# Parameters
x  <- 1:100  # x variable
y <- x^2     # squared x
# Visualization
plot(y ~ x, type = "l")
data(mtcars)
force(mtcars)
?mtcars
View(mtcar)
?mtcars
View(mtcars)
View(mtcars)
View(mtcars)
View(mtcars)
mean(hp)
objects()
mean(mtcars$hp)
sd(mtcars$hp)
hist(mtcars$hp)
plot(x = mtcars$hp, mtcars$mpg)
?plot
?mean
mode(NA)
mod(mean)
mode(mean)
mode(1)
mode(TRUE)
mode(mode)
function()
{}
function(a){}
function(a) { }
function(a) {}
function(a) {}
function(a) {
a
}
function(a = 5) {
a
}
